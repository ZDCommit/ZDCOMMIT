@date = 2018-Jan-24 10:10:52
@version = 4.0.5.20171130
Script {{
    folder9317 := Folder "../../../newMapAnalysis/New";

    string7883 := String "rhondonia";

    string78830 := String "chaco";

    string78831 := String "matoGrosso";

    string78832 := String "para";

    @collapsed = yes
    @alias = Names
    Group {{
        createString701511 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2012 1;

            NumberString ".tif" 2;
        }};

        createString7015112 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2005 1;

            NumberString ".tif" 2;
        }};

        createString7015113 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2003 1;

            NumberString ".tif" 2;
        }};

        createString7015110 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2010 1;

            NumberString ".tif" 2;
        }};

        createString7015116 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2004 1;

            NumberString ".tif" 2;
        }};

        createString7015111 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2007 1;

            NumberString ".tif" 2;
        }};

        createString70151111 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2002 1;

            NumberString ".tif" 2;
        }};

        createString7015115 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2009 1;

            NumberString ".tif" 2;
        }};

        createString7015114 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2014 1;

            NumberString ".tif" 2;
        }};

        createString70151110 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2011 1;

            NumberString ".tif" 2;
        }};

        createString7015119 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2008 1;

            NumberString ".tif" 2;
        }};

        createString7015117 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2001 1;

            NumberString ".tif" 2;
        }};

        createString70151112 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2013 1;

            NumberString ".tif" 2;
        }};

        createString7015118 := CreateString "<s1><v1><s2>" {{
            NumberString string78832 1;

            NumberValue 2006 1;

            NumberString ".tif" 2;
        }};
    }};

    @collapsed = yes
    @alias = Names
    Group {{
        createString70151113 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2012 1;

            NumberString ".tif" 2;
        }};

        createString70151118 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2014 1;

            NumberString ".tif" 2;
        }};

        createString70151114 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2010 1;

            NumberString ".tif" 2;
        }};

        createString70151122 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2006 1;

            NumberString ".tif" 2;
        }};

        createString70151123 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2008 1;

            NumberString ".tif" 2;
        }};

        createString70151119 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2009 1;

            NumberString ".tif" 2;
        }};

        createString70151124 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2011 1;

            NumberString ".tif" 2;
        }};

        createString70151125 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2002 1;

            NumberString ".tif" 2;
        }};

        createString70151117 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2003 1;

            NumberString ".tif" 2;
        }};

        createString70151120 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2004 1;

            NumberString ".tif" 2;
        }};

        createString70151116 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2005 1;

            NumberString ".tif" 2;
        }};

        createString70151115 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2007 1;

            NumberString ".tif" 2;
        }};

        createString70151121 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2001 1;

            NumberString ".tif" 2;
        }};

        createString70151126 := CreateString "<s1><v1><s2>" {{
            NumberString string7883 1;

            NumberValue 2013 1;

            NumberString ".tif" 2;
        }};
    }};

    @collapsed = yes
    @alias = Names
    Group {{
        createString70151128 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2010 1;

            NumberString ".tif" 2;
        }};

        createString70151127 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2012 1;

            NumberString ".tif" 2;
        }};

        createString70151130 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2005 1;

            NumberString ".tif" 2;
        }};

        createString70151129 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2007 1;

            NumberString ".tif" 2;
        }};

        createString70151131 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2003 1;

            NumberString ".tif" 2;
        }};

        createString70151132 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2014 1;

            NumberString ".tif" 2;
        }};

        createString70151133 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2009 1;

            NumberString ".tif" 2;
        }};

        createString70151136 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2006 1;

            NumberString ".tif" 2;
        }};

        createString70151134 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2004 1;

            NumberString ".tif" 2;
        }};

        createString70151138 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2011 1;

            NumberString ".tif" 2;
        }};

        createString70151140 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2013 1;

            NumberString ".tif" 2;
        }};

        createString70151135 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2001 1;

            NumberString ".tif" 2;
        }};

        createString70151137 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2008 1;

            NumberString ".tif" 2;
        }};

        createString70151139 := CreateString "<s1><v1><s2>" {{
            NumberString string78830 1;

            NumberValue 2002 1;

            NumberString ".tif" 2;
        }};
    }};

    @collapsed = yes
    @alias = Names
    Group {{
        createString70151147 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2009 1;

            NumberString ".tif" 2;
        }};

        createString70151149 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2001 1;

            NumberString ".tif" 2;
        }};

        createString70151150 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2006 1;

            NumberString ".tif" 2;
        }};

        createString70151151 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2008 1;

            NumberString ".tif" 2;
        }};

        createString70151152 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2011 1;

            NumberString ".tif" 2;
        }};

        createString70151153 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2002 1;

            NumberString ".tif" 2;
        }};

        createString70151154 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2013 1;

            NumberString ".tif" 2;
        }};

        createString70151142 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2010 1;

            NumberString ".tif" 2;
        }};

        createString70151148 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2004 1;

            NumberString ".tif" 2;
        }};

        createString70151145 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2003 1;

            NumberString ".tif" 2;
        }};

        createString70151144 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2005 1;

            NumberString ".tif" 2;
        }};

        createString70151143 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2007 1;

            NumberString ".tif" 2;
        }};

        createString70151146 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2014 1;

            NumberString ".tif" 2;
        }};

        createString70151141 := CreateString "<s1><v1><s2>" {{
            NumberString string78831 1;

            NumberValue 2012 1;

            NumberString ".tif" 2;
        }};
    }};

    @collapsed = yes
    Workdir folder9317 {{
        workdir = workdir;

        @collapsed = yes
        Group {{
            @alias = 2009
            _2009 := LoadCategoricalMap {
                filename = createString70151147,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2011
            _2011 := LoadCategoricalMap {
                filename = createString70151152,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2003
            _2003 := LoadCategoricalMap {
                filename = createString70151145,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2013
            _2013 := LoadCategoricalMap {
                filename = createString70151154,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2008
            _2008 := LoadCategoricalMap {
                filename = createString70151151,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2006
            _2006 := LoadCategoricalMap {
                filename = createString70151150,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2004
            _2004 := LoadCategoricalMap {
                filename = createString70151148,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2001
            _2001 := LoadCategoricalMap {
                filename = createString70151149,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2012
            _2012 := LoadCategoricalMap {
                filename = createString70151141,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2005
            _2005 := LoadCategoricalMap {
                filename = createString70151144,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2002
            _2002 := LoadCategoricalMap {
                filename = createString70151153,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2007
            _2007 := LoadCategoricalMap {
                filename = createString70151143,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2010
            _2010 := LoadCategoricalMap {
                filename = createString70151142,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };

            @alias = 2014
            _2014 := LoadCategoricalMap {
                filename = createString70151146,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir
            };
        }};
    }};

    @collapsed = yes
    Workdir folder9317 {{
        workdir0 = workdir;

        @collapsed = yes
        Group {{
            @alias = 2011
            _20110 := LoadCategoricalMap {
                filename = createString70151110,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2002
            _20020 := LoadCategoricalMap {
                filename = createString70151111,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2007
            _20070 := LoadCategoricalMap {
                filename = createString7015111,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2013
            _20130 := LoadCategoricalMap {
                filename = createString70151112,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2001
            _20010 := LoadCategoricalMap {
                filename = createString7015117,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2008
            _20080 := LoadCategoricalMap {
                filename = createString7015119,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2006
            _20060 := LoadCategoricalMap {
                filename = createString7015118,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2014
            _20140 := LoadCategoricalMap {
                filename = createString7015114,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2010
            _20100 := LoadCategoricalMap {
                filename = createString7015110,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2003
            _20030 := LoadCategoricalMap {
                filename = createString7015113,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2004
            _20040 := LoadCategoricalMap {
                filename = createString7015116,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2005
            _20050 := LoadCategoricalMap {
                filename = createString7015112,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2012
            _20120 := LoadCategoricalMap {
                filename = createString701511,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };

            @alias = 2009
            _20090 := LoadCategoricalMap {
                filename = createString7015115,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir0
            };
        }};
    }};

    @collapsed = yes
    Workdir folder9317 {{
        workdir1 = workdir;

        @collapsed = yes
        Group {{
            @alias = 2014
            _20141 := LoadCategoricalMap {
                filename = createString70151118,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2006
            _20061 := LoadCategoricalMap {
                filename = createString70151122,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2011
            _20111 := LoadCategoricalMap {
                filename = createString70151124,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2009
            _20091 := LoadCategoricalMap {
                filename = createString70151119,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2012
            _20121 := LoadCategoricalMap {
                filename = createString70151113,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2005
            _20051 := LoadCategoricalMap {
                filename = createString70151116,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2004
            _20041 := LoadCategoricalMap {
                filename = createString70151120,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2013
            _20131 := LoadCategoricalMap {
                filename = createString70151126,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2010
            _20101 := LoadCategoricalMap {
                filename = createString70151114,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2001
            _20011 := LoadCategoricalMap {
                filename = createString70151121,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2002
            _20021 := LoadCategoricalMap {
                filename = createString70151125,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2007
            _20071 := LoadCategoricalMap {
                filename = createString70151115,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2008
            _20081 := LoadCategoricalMap {
                filename = createString70151123,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };

            @alias = 2003
            _20031 := LoadCategoricalMap {
                filename = createString70151117,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir1
            };
        }};
    }};

    @collapsed = yes
    Workdir folder9317 {{
        workdir2 = workdir;

        @collapsed = yes
        Group {{
            @alias = 2006
            _20062 := LoadCategoricalMap {
                filename = createString70151136,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2005
            _20052 := LoadCategoricalMap {
                filename = createString70151130,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2004
            _20042 := LoadCategoricalMap {
                filename = createString70151134,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2011
            _20112 := LoadCategoricalMap {
                filename = createString70151138,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2009
            _20092 := LoadCategoricalMap {
                filename = createString70151133,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2012
            _20122 := LoadCategoricalMap {
                filename = createString70151127,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2014
            _20142 := LoadCategoricalMap {
                filename = createString70151132,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2001
            _20012 := LoadCategoricalMap {
                filename = createString70151135,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2002
            _20022 := LoadCategoricalMap {
                filename = createString70151139,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2007
            _20072 := LoadCategoricalMap {
                filename = createString70151129,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2003
            _20032 := LoadCategoricalMap {
                filename = createString70151131,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2013
            _20132 := LoadCategoricalMap {
                filename = createString70151140,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2008
            _20082 := LoadCategoricalMap {
                filename = createString70151137,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };

            @alias = 2010
            _20102 := LoadCategoricalMap {
                filename = createString70151128,
                nullValue = .none,
                loadAsSparse = .no,
                suffixDigits = 0,
                step = .none,
                workdir = workdir2
            };
        }};
    }};

    @viewer.object = yes
    table57210 := Table [
        "Year*", "forest_to_pastureland", "pastureland_to_cropland", "pastureland_to_forest", "forest_to_cropland", "State", 
        20012, 0, 0, 0, 0, "", 
        20023, 0, 0, 0, 0, "", 
        20034, 0, 0, 0, 0, "", 
        20045, 0, 0, 0, 0, "", 
        20056, 0, 0, 0, 0, "", 
        20067, 0, 0, 0, 0, "", 
        20078, 0, 0, 0, 0, "", 
        20089, 0, 0, 0, 0, "", 
        200910, 0, 0, 0, 0, "", 
        201011, 0, 0, 0, 0, "", 
        201112, 0, 0, 0, 0, "", 
        201213, 0, 0, 0, 0, "", 
        201314, 0, 0, 0, 0, "", 
    ];

    @viewer.object = yes
    table572100 := Table [
        "Year*", "forest_to_pastureland", "pastureland_to_cropland", "pastureland_to_forest", "forest_to_cropland", "State", 
        20012, 0, 0, 0, 0, "", 
        20023, 0, 0, 0, 0, "", 
        20034, 0, 0, 0, 0, "", 
        20045, 0, 0, 0, 0, "", 
        20056, 0, 0, 0, 0, "", 
        20067, 0, 0, 0, 0, "", 
        20078, 0, 0, 0, 0, "", 
        20089, 0, 0, 0, 0, "", 
        200910, 0, 0, 0, 0, "", 
        201011, 0, 0, 0, 0, "", 
        201112, 0, 0, 0, 0, "", 
        201213, 0, 0, 0, 0, "", 
        201314, 0, 0, 0, 0, "", 
    ];

    @viewer.object = yes
    table572101 := Table [
        "Year*", "forest_to_pastureland", "pastureland_to_cropland", "pastureland_to_forest", "forest_to_cropland", "State", 
        20012, 0, 0, 0, 0, "", 
        20023, 0, 0, 0, 0, "", 
        20034, 0, 0, 0, 0, "", 
        20045, 0, 0, 0, 0, "", 
        20056, 0, 0, 0, 0, "", 
        20067, 0, 0, 0, 0, "", 
        20078, 0, 0, 0, 0, "", 
        20089, 0, 0, 0, 0, "", 
        200910, 0, 0, 0, 0, "", 
        201011, 0, 0, 0, 0, "", 
        201112, 0, 0, 0, 0, "", 
        201213, 0, 0, 0, 0, "", 
        201314, 0, 0, 0, 0, "", 
    ];

    @viewer.object = yes
    table572102 := Table [
        "Year*", "forest_to_pastureland", "pastureland_to_cropland", "pastureland_to_forest", "forest_to_cropland", "State", 
        20012, 0, 0, 0, 0, "", 
        20023, 0, 0, 0, 0, "", 
        20034, 0, 0, 0, 0, "", 
        20045, 0, 0, 0, 0, "", 
        20056, 0, 0, 0, 0, "", 
        20067, 0, 0, 0, 0, "", 
        20078, 0, 0, 0, 0, "", 
        20089, 0, 0, 0, 0, "", 
        200910, 0, 0, 0, 0, "", 
        201011, 0, 0, 0, 0, "", 
        201112, 0, 0, 0, 0, "", 
        201213, 0, 0, 0, 0, "", 
        201314, 0, 0, 0, 0, "", 
    ];

    @collapsed = yes
    @alias = 2001 to 2002 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20011 1;

            NumberMap _20021 2;
        }};

        @viewer.areas = yes
        calcAreas564971 := CalcAreas calculateCategoricalMap7483;

        realValue590271 := RealValue 20012;

        @viewer.result = yes
        getForestToPasturelandValue := GetTableValue {
            table = calcAreas564971,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @viewer.result = yes
        getPasturelandToCroplandValue := GetTableValue {
            table = calcAreas564971,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @viewer.result = yes
        setValue := SetTableCellValue {
            table = table57210,
            column = 2,
            keys = realValue590271,
            value = getForestToPasturelandValue
        };

        @alias = Set Value
        @viewer.result = yes
        setValue0 := SetTableCellValue {
            table = setValue,
            column = 3,
            keys = realValue590271,
            value = getPasturelandToCroplandValue
        };

        @viewer.result = yes
        getPasturelandToForestValue := GetTableValue {
            table = calcAreas564971,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @viewer.result = yes
        getForestToCroplandValue := GetTableValue {
            table = calcAreas564971,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue1 := SetTableCellValue {
            table = setValue0,
            column = 4,
            keys = realValue590271,
            value = getPasturelandToForestValue
        };

        @alias = Set Value
        @viewer.result = yes
        setValue2 := SetTableCellValue {
            table = setValue1,
            column = 5,
            keys = realValue590271,
            value = getForestToCroplandValue
        };

        @viewer.result = yes
        setStateValue := SetTableCellValue {
            table = setValue2,
            column = 6,
            keys = realValue590271,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2001 to 2002 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap74830 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20010 1;

            NumberMap _20020 2;
        }};

        @viewer.areas = yes
        calcAreas5649710 := CalcAreas calculateCategoricalMap74830;

        realValue5902710 := RealValue 20012;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue0 := GetTableValue {
            table = calcAreas5649710,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue3 := SetTableCellValue {
            table = table572102,
            column = 2,
            keys = realValue5902710,
            value = getForestToPasturelandValue0
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue0 := GetTableValue {
            table = calcAreas5649710,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue0 := GetTableValue {
            table = calcAreas5649710,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue4 := SetTableCellValue {
            table = setValue3,
            column = 3,
            keys = realValue5902710,
            value = getPasturelandToCroplandValue0
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue0 := GetTableValue {
            table = calcAreas5649710,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue5 := SetTableCellValue {
            table = setValue4,
            column = 4,
            keys = realValue5902710,
            value = getPasturelandToForestValue0
        };

        @alias = Set Value
        @viewer.result = yes
        setValue6 := SetTableCellValue {
            table = setValue5,
            column = 5,
            keys = realValue5902710,
            value = getForestToCroplandValue0
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue0 := SetTableCellValue {
            table = setValue6,
            column = 6,
            keys = realValue5902710,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2001 to 2002 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap74831 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20012 1;

            NumberMap _20022 2;
        }};

        @viewer.areas = yes
        calcAreas5649711 := CalcAreas calculateCategoricalMap74831;

        realValue5902711 := RealValue 20012;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue1 := GetTableValue {
            table = calcAreas5649711,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue7 := SetTableCellValue {
            table = table572100,
            column = 2,
            keys = realValue5902711,
            value = getForestToPasturelandValue1
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue1 := GetTableValue {
            table = calcAreas5649711,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue8 := SetTableCellValue {
            table = setValue7,
            column = 3,
            keys = realValue5902711,
            value = getPasturelandToCroplandValue1
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue1 := GetTableValue {
            table = calcAreas5649711,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue1 := GetTableValue {
            table = calcAreas5649711,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue9 := SetTableCellValue {
            table = setValue8,
            column = 4,
            keys = realValue5902711,
            value = getPasturelandToForestValue1
        };

        @alias = Set Value
        @viewer.result = yes
        setValue10 := SetTableCellValue {
            table = setValue9,
            column = 5,
            keys = realValue5902711,
            value = getForestToCroplandValue1
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue1 := SetTableCellValue {
            table = setValue10,
            column = 6,
            keys = realValue5902711,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2001 to 2002 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap74832 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2001 1;

            NumberMap _2002 2;
        }};

        @viewer.areas = yes
        calcAreas5649712 := CalcAreas calculateCategoricalMap74832;

        realValue5902712 := RealValue 20012;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue2 := GetTableValue {
            table = calcAreas5649712,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue11 := SetTableCellValue {
            table = table572101,
            column = 2,
            keys = realValue5902712,
            value = getForestToPasturelandValue2
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue2 := GetTableValue {
            table = calcAreas5649712,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue2 := GetTableValue {
            table = calcAreas5649712,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue12 := SetTableCellValue {
            table = setValue11,
            column = 3,
            keys = realValue5902712,
            value = getPasturelandToCroplandValue2
        };

        @alias = Set Value
        @viewer.result = yes
        setValue13 := SetTableCellValue {
            table = setValue12,
            column = 4,
            keys = realValue5902712,
            value = getPasturelandToForestValue2
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue2 := GetTableValue {
            table = calcAreas5649712,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue14 := SetTableCellValue {
            table = setValue13,
            column = 5,
            keys = realValue5902712,
            value = getForestToCroplandValue2
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue2 := SetTableCellValue {
            table = setValue14,
            column = 6,
            keys = realValue5902712,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2002 to 2003 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap74833 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20021 1;

            NumberMap _20031 2;
        }};

        @viewer.areas = yes
        calcAreas5649713 := CalcAreas calculateCategoricalMap74833;

        realValue5902713 := RealValue 20023;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue3 := GetTableValue {
            table = calcAreas5649713,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue15 := SetTableCellValue {
            table = setStateValue,
            column = 2,
            keys = realValue5902713,
            value = getForestToPasturelandValue3
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue3 := GetTableValue {
            table = calcAreas5649713,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue16 := SetTableCellValue {
            table = setValue15,
            column = 3,
            keys = realValue5902713,
            value = getPasturelandToCroplandValue3
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue3 := GetTableValue {
            table = calcAreas5649713,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue17 := SetTableCellValue {
            table = setValue16,
            column = 4,
            keys = realValue5902713,
            value = getPasturelandToForestValue3
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue3 := GetTableValue {
            table = calcAreas5649713,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue18 := SetTableCellValue {
            table = setValue17,
            column = 5,
            keys = realValue5902713,
            value = getForestToCroplandValue3
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue3 := SetTableCellValue {
            table = setValue18,
            column = 6,
            keys = realValue5902713,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2002 to 2003 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap74834 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20022 1;

            NumberMap _20032 2;
        }};

        @viewer.areas = yes
        calcAreas5649714 := CalcAreas calculateCategoricalMap74834;

        realValue5902714 := RealValue 20023;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue4 := GetTableValue {
            table = calcAreas5649714,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue4 := GetTableValue {
            table = calcAreas5649714,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue19 := SetTableCellValue {
            table = setStateValue1,
            column = 2,
            keys = realValue5902714,
            value = getForestToPasturelandValue4
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue4 := GetTableValue {
            table = calcAreas5649714,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue20 := SetTableCellValue {
            table = setValue19,
            column = 3,
            keys = realValue5902714,
            value = getPasturelandToCroplandValue4
        };

        @alias = Set Value
        @viewer.result = yes
        setValue21 := SetTableCellValue {
            table = setValue20,
            column = 4,
            keys = realValue5902714,
            value = getPasturelandToForestValue4
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue4 := GetTableValue {
            table = calcAreas5649714,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue22 := SetTableCellValue {
            table = setValue21,
            column = 5,
            keys = realValue5902714,
            value = getForestToCroplandValue4
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue4 := SetTableCellValue {
            table = setValue22,
            column = 6,
            keys = realValue5902714,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2002 to 2003 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap74835 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20020 1;

            NumberMap _20030 2;
        }};

        @viewer.areas = yes
        calcAreas5649715 := CalcAreas calculateCategoricalMap74835;

        realValue5902715 := RealValue 20023;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue5 := GetTableValue {
            table = calcAreas5649715,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue5 := GetTableValue {
            table = calcAreas5649715,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue23 := SetTableCellValue {
            table = setStateValue0,
            column = 2,
            keys = realValue5902715,
            value = getForestToPasturelandValue5
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue5 := GetTableValue {
            table = calcAreas5649715,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue24 := SetTableCellValue {
            table = setValue23,
            column = 3,
            keys = realValue5902715,
            value = getPasturelandToCroplandValue5
        };

        @alias = Set Value
        @viewer.result = yes
        setValue25 := SetTableCellValue {
            table = setValue24,
            column = 4,
            keys = realValue5902715,
            value = getPasturelandToForestValue5
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue5 := GetTableValue {
            table = calcAreas5649715,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue26 := SetTableCellValue {
            table = setValue25,
            column = 5,
            keys = realValue5902715,
            value = getForestToCroplandValue5
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue5 := SetTableCellValue {
            table = setValue26,
            column = 6,
            keys = realValue5902715,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2002 to 2003 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap74836 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2002 1;

            NumberMap _2003 2;
        }};

        @viewer.areas = yes
        calcAreas5649716 := CalcAreas calculateCategoricalMap74836;

        realValue5902716 := RealValue 20023;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue6 := GetTableValue {
            table = calcAreas5649716,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue6 := GetTableValue {
            table = calcAreas5649716,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue27 := SetTableCellValue {
            table = setStateValue2,
            column = 2,
            keys = realValue5902716,
            value = getForestToPasturelandValue6
        };

        @alias = Set Value
        @viewer.result = yes
        setValue28 := SetTableCellValue {
            table = setValue27,
            column = 3,
            keys = realValue5902716,
            value = getPasturelandToCroplandValue6
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue6 := GetTableValue {
            table = calcAreas5649716,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue6 := GetTableValue {
            table = calcAreas5649716,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue29 := SetTableCellValue {
            table = setValue28,
            column = 4,
            keys = realValue5902716,
            value = getPasturelandToForestValue6
        };

        @alias = Set Value
        @viewer.result = yes
        setValue30 := SetTableCellValue {
            table = setValue29,
            column = 5,
            keys = realValue5902716,
            value = getForestToCroplandValue6
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue6 := SetTableCellValue {
            table = setValue30,
            column = 6,
            keys = realValue5902716,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2003 to 2004 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap74837 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20031 1;

            NumberMap _20041 2;
        }};

        @viewer.areas = yes
        calcAreas5649717 := CalcAreas calculateCategoricalMap74837;

        realValue5902717 := RealValue 20034;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue7 := GetTableValue {
            table = calcAreas5649717,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue7 := GetTableValue {
            table = calcAreas5649717,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue31 := SetTableCellValue {
            table = setStateValue3,
            column = 2,
            keys = realValue5902717,
            value = getForestToPasturelandValue7
        };

        @alias = Set Value
        @viewer.result = yes
        setValue32 := SetTableCellValue {
            table = setValue31,
            column = 3,
            keys = realValue5902717,
            value = getPasturelandToCroplandValue7
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue7 := GetTableValue {
            table = calcAreas5649717,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue7 := GetTableValue {
            table = calcAreas5649717,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue33 := SetTableCellValue {
            table = setValue32,
            column = 4,
            keys = realValue5902717,
            value = getPasturelandToForestValue7
        };

        @alias = Set Value
        @viewer.result = yes
        setValue34 := SetTableCellValue {
            table = setValue33,
            column = 5,
            keys = realValue5902717,
            value = getForestToCroplandValue7
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue7 := SetTableCellValue {
            table = setValue34,
            column = 6,
            keys = realValue5902717,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2003 to 2004 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap74838 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20032 1;

            NumberMap _20042 2;
        }};

        @viewer.areas = yes
        calcAreas5649718 := CalcAreas calculateCategoricalMap74838;

        realValue5902718 := RealValue 20034;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue8 := GetTableValue {
            table = calcAreas5649718,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue35 := SetTableCellValue {
            table = setStateValue4,
            column = 2,
            keys = realValue5902718,
            value = getForestToPasturelandValue8
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue8 := GetTableValue {
            table = calcAreas5649718,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue36 := SetTableCellValue {
            table = setValue35,
            column = 3,
            keys = realValue5902718,
            value = getPasturelandToCroplandValue8
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue8 := GetTableValue {
            table = calcAreas5649718,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue8 := GetTableValue {
            table = calcAreas5649718,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue37 := SetTableCellValue {
            table = setValue36,
            column = 4,
            keys = realValue5902718,
            value = getPasturelandToForestValue8
        };

        @alias = Set Value
        @viewer.result = yes
        setValue38 := SetTableCellValue {
            table = setValue37,
            column = 5,
            keys = realValue5902718,
            value = getForestToCroplandValue8
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue8 := SetTableCellValue {
            table = setValue38,
            column = 6,
            keys = realValue5902718,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2003 to 2004 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap74839 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2003 1;

            NumberMap _2004 2;
        }};

        @viewer.areas = yes
        calcAreas5649719 := CalcAreas calculateCategoricalMap74839;

        realValue5902719 := RealValue 20034;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue9 := GetTableValue {
            table = calcAreas5649719,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue9 := GetTableValue {
            table = calcAreas5649719,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue39 := SetTableCellValue {
            table = setStateValue6,
            column = 2,
            keys = realValue5902719,
            value = getForestToPasturelandValue9
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue9 := GetTableValue {
            table = calcAreas5649719,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue40 := SetTableCellValue {
            table = setValue39,
            column = 3,
            keys = realValue5902719,
            value = getPasturelandToCroplandValue9
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue9 := GetTableValue {
            table = calcAreas5649719,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue41 := SetTableCellValue {
            table = setValue40,
            column = 4,
            keys = realValue5902719,
            value = getPasturelandToForestValue9
        };

        @alias = Set Value
        @viewer.result = yes
        setValue42 := SetTableCellValue {
            table = setValue41,
            column = 5,
            keys = realValue5902719,
            value = getForestToCroplandValue9
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue9 := SetTableCellValue {
            table = setValue42,
            column = 6,
            keys = realValue5902719,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2003 to 2004 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748310 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20030 1;

            NumberMap _20040 2;
        }};

        @viewer.areas = yes
        calcAreas56497110 := CalcAreas calculateCategoricalMap748310;

        realValue59027110 := RealValue 20034;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue10 := GetTableValue {
            table = calcAreas56497110,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue10 := GetTableValue {
            table = calcAreas56497110,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue43 := SetTableCellValue {
            table = setStateValue5,
            column = 2,
            keys = realValue59027110,
            value = getForestToPasturelandValue10
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue10 := GetTableValue {
            table = calcAreas56497110,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue44 := SetTableCellValue {
            table = setValue43,
            column = 3,
            keys = realValue59027110,
            value = getPasturelandToCroplandValue10
        };

        @alias = Set Value
        @viewer.result = yes
        setValue45 := SetTableCellValue {
            table = setValue44,
            column = 4,
            keys = realValue59027110,
            value = getPasturelandToForestValue10
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue10 := GetTableValue {
            table = calcAreas56497110,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue46 := SetTableCellValue {
            table = setValue45,
            column = 5,
            keys = realValue59027110,
            value = getForestToCroplandValue10
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue10 := SetTableCellValue {
            table = setValue46,
            column = 6,
            keys = realValue59027110,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2004 to 2005 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748311 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20041 1;

            NumberMap _20051 2;
        }};

        @viewer.areas = yes
        calcAreas56497111 := CalcAreas calculateCategoricalMap748311;

        realValue59027111 := RealValue 20045;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue11 := GetTableValue {
            table = calcAreas56497111,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue11 := GetTableValue {
            table = calcAreas56497111,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue47 := SetTableCellValue {
            table = setStateValue7,
            column = 2,
            keys = realValue59027111,
            value = getForestToPasturelandValue11
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue11 := GetTableValue {
            table = calcAreas56497111,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue48 := SetTableCellValue {
            table = setValue47,
            column = 3,
            keys = realValue59027111,
            value = getPasturelandToCroplandValue11
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue11 := GetTableValue {
            table = calcAreas56497111,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue49 := SetTableCellValue {
            table = setValue48,
            column = 4,
            keys = realValue59027111,
            value = getPasturelandToForestValue11
        };

        @alias = Set Value
        @viewer.result = yes
        setValue50 := SetTableCellValue {
            table = setValue49,
            column = 5,
            keys = realValue59027111,
            value = getForestToCroplandValue11
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue11 := SetTableCellValue {
            table = setValue50,
            column = 6,
            keys = realValue59027111,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2004 to 2005 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748312 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20042 1;

            NumberMap _20052 2;
        }};

        @viewer.areas = yes
        calcAreas56497112 := CalcAreas calculateCategoricalMap748312;

        realValue59027112 := RealValue 20045;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue12 := GetTableValue {
            table = calcAreas56497112,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue12 := GetTableValue {
            table = calcAreas56497112,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue51 := SetTableCellValue {
            table = setStateValue8,
            column = 2,
            keys = realValue59027112,
            value = getForestToPasturelandValue12
        };

        @alias = Set Value
        @viewer.result = yes
        setValue52 := SetTableCellValue {
            table = setValue51,
            column = 3,
            keys = realValue59027112,
            value = getPasturelandToCroplandValue12
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue12 := GetTableValue {
            table = calcAreas56497112,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue53 := SetTableCellValue {
            table = setValue52,
            column = 4,
            keys = realValue59027112,
            value = getPasturelandToForestValue12
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue12 := GetTableValue {
            table = calcAreas56497112,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue54 := SetTableCellValue {
            table = setValue53,
            column = 5,
            keys = realValue59027112,
            value = getForestToCroplandValue12
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue12 := SetTableCellValue {
            table = setValue54,
            column = 6,
            keys = realValue59027112,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2004 to 2005 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748313 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20040 1;

            NumberMap _20050 2;
        }};

        @viewer.areas = yes
        calcAreas56497113 := CalcAreas calculateCategoricalMap748313;

        realValue59027113 := RealValue 20045;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue13 := GetTableValue {
            table = calcAreas56497113,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue13 := GetTableValue {
            table = calcAreas56497113,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue55 := SetTableCellValue {
            table = setStateValue10,
            column = 2,
            keys = realValue59027113,
            value = getForestToPasturelandValue13
        };

        @alias = Set Value
        @viewer.result = yes
        setValue56 := SetTableCellValue {
            table = setValue55,
            column = 3,
            keys = realValue59027113,
            value = getPasturelandToCroplandValue13
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue13 := GetTableValue {
            table = calcAreas56497113,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue13 := GetTableValue {
            table = calcAreas56497113,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue57 := SetTableCellValue {
            table = setValue56,
            column = 4,
            keys = realValue59027113,
            value = getPasturelandToForestValue13
        };

        @alias = Set Value
        @viewer.result = yes
        setValue58 := SetTableCellValue {
            table = setValue57,
            column = 5,
            keys = realValue59027113,
            value = getForestToCroplandValue13
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue13 := SetTableCellValue {
            table = setValue58,
            column = 6,
            keys = realValue59027113,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2004 to 2005 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748314 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2004 1;

            NumberMap _2005 2;
        }};

        @viewer.areas = yes
        calcAreas56497114 := CalcAreas calculateCategoricalMap748314;

        realValue59027114 := RealValue 20045;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue14 := GetTableValue {
            table = calcAreas56497114,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue59 := SetTableCellValue {
            table = setStateValue9,
            column = 2,
            keys = realValue59027114,
            value = getForestToPasturelandValue14
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue14 := GetTableValue {
            table = calcAreas56497114,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue14 := GetTableValue {
            table = calcAreas56497114,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue60 := SetTableCellValue {
            table = setValue59,
            column = 3,
            keys = realValue59027114,
            value = getPasturelandToCroplandValue14
        };

        @alias = Set Value
        @viewer.result = yes
        setValue61 := SetTableCellValue {
            table = setValue60,
            column = 4,
            keys = realValue59027114,
            value = getPasturelandToForestValue14
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue14 := GetTableValue {
            table = calcAreas56497114,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue62 := SetTableCellValue {
            table = setValue61,
            column = 5,
            keys = realValue59027114,
            value = getForestToCroplandValue14
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue14 := SetTableCellValue {
            table = setValue62,
            column = 6,
            keys = realValue59027114,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2005 to 2006 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748315 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20051 1;

            NumberMap _20061 2;
        }};

        @viewer.areas = yes
        calcAreas56497115 := CalcAreas calculateCategoricalMap748315;

        realValue59027115 := RealValue 20056;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue15 := GetTableValue {
            table = calcAreas56497115,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue63 := SetTableCellValue {
            table = setStateValue11,
            column = 2,
            keys = realValue59027115,
            value = getForestToPasturelandValue15
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue15 := GetTableValue {
            table = calcAreas56497115,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue64 := SetTableCellValue {
            table = setValue63,
            column = 3,
            keys = realValue59027115,
            value = getPasturelandToCroplandValue15
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue15 := GetTableValue {
            table = calcAreas56497115,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue65 := SetTableCellValue {
            table = setValue64,
            column = 4,
            keys = realValue59027115,
            value = getPasturelandToForestValue15
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue15 := GetTableValue {
            table = calcAreas56497115,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue66 := SetTableCellValue {
            table = setValue65,
            column = 5,
            keys = realValue59027115,
            value = getForestToCroplandValue15
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue15 := SetTableCellValue {
            table = setValue66,
            column = 6,
            keys = realValue59027115,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2005 to 2006 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748316 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20052 1;

            NumberMap _20062 2;
        }};

        @viewer.areas = yes
        calcAreas56497116 := CalcAreas calculateCategoricalMap748316;

        realValue59027116 := RealValue 20056;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue16 := GetTableValue {
            table = calcAreas56497116,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue16 := GetTableValue {
            table = calcAreas56497116,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue67 := SetTableCellValue {
            table = setStateValue12,
            column = 2,
            keys = realValue59027116,
            value = getForestToPasturelandValue16
        };

        @alias = Set Value
        @viewer.result = yes
        setValue68 := SetTableCellValue {
            table = setValue67,
            column = 3,
            keys = realValue59027116,
            value = getPasturelandToCroplandValue16
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue16 := GetTableValue {
            table = calcAreas56497116,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue16 := GetTableValue {
            table = calcAreas56497116,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue69 := SetTableCellValue {
            table = setValue68,
            column = 4,
            keys = realValue59027116,
            value = getPasturelandToForestValue16
        };

        @alias = Set Value
        @viewer.result = yes
        setValue70 := SetTableCellValue {
            table = setValue69,
            column = 5,
            keys = realValue59027116,
            value = getForestToCroplandValue16
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue16 := SetTableCellValue {
            table = setValue70,
            column = 6,
            keys = realValue59027116,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2005 to 2006 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748317 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20050 1;

            NumberMap _20060 2;
        }};

        @viewer.areas = yes
        calcAreas56497117 := CalcAreas calculateCategoricalMap748317;

        realValue59027117 := RealValue 20056;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue17 := GetTableValue {
            table = calcAreas56497117,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue17 := GetTableValue {
            table = calcAreas56497117,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue71 := SetTableCellValue {
            table = setStateValue13,
            column = 2,
            keys = realValue59027117,
            value = getForestToPasturelandValue17
        };

        @alias = Set Value
        @viewer.result = yes
        setValue72 := SetTableCellValue {
            table = setValue71,
            column = 3,
            keys = realValue59027117,
            value = getPasturelandToCroplandValue17
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue17 := GetTableValue {
            table = calcAreas56497117,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue73 := SetTableCellValue {
            table = setValue72,
            column = 4,
            keys = realValue59027117,
            value = getPasturelandToForestValue17
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue17 := GetTableValue {
            table = calcAreas56497117,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue74 := SetTableCellValue {
            table = setValue73,
            column = 5,
            keys = realValue59027117,
            value = getForestToCroplandValue17
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue17 := SetTableCellValue {
            table = setValue74,
            column = 6,
            keys = realValue59027117,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2005 to 2006 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748318 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2005 1;

            NumberMap _2006 2;
        }};

        @viewer.areas = yes
        calcAreas56497118 := CalcAreas calculateCategoricalMap748318;

        realValue59027118 := RealValue 20056;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue18 := GetTableValue {
            table = calcAreas56497118,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue18 := GetTableValue {
            table = calcAreas56497118,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue75 := SetTableCellValue {
            table = setStateValue14,
            column = 2,
            keys = realValue59027118,
            value = getForestToPasturelandValue18
        };

        @alias = Set Value
        @viewer.result = yes
        setValue76 := SetTableCellValue {
            table = setValue75,
            column = 3,
            keys = realValue59027118,
            value = getPasturelandToCroplandValue18
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue18 := GetTableValue {
            table = calcAreas56497118,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue18 := GetTableValue {
            table = calcAreas56497118,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue77 := SetTableCellValue {
            table = setValue76,
            column = 4,
            keys = realValue59027118,
            value = getPasturelandToForestValue18
        };

        @alias = Set Value
        @viewer.result = yes
        setValue78 := SetTableCellValue {
            table = setValue77,
            column = 5,
            keys = realValue59027118,
            value = getForestToCroplandValue18
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue18 := SetTableCellValue {
            table = setValue78,
            column = 6,
            keys = realValue59027118,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2006 to 2007 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748319 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20061 1;

            NumberMap _20071 2;
        }};

        @viewer.areas = yes
        calcAreas56497119 := CalcAreas calculateCategoricalMap748319;

        realValue59027119 := RealValue 20067;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue19 := GetTableValue {
            table = calcAreas56497119,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue79 := SetTableCellValue {
            table = setStateValue15,
            column = 2,
            keys = realValue59027119,
            value = getForestToPasturelandValue19
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue19 := GetTableValue {
            table = calcAreas56497119,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue19 := GetTableValue {
            table = calcAreas56497119,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue80 := SetTableCellValue {
            table = setValue79,
            column = 3,
            keys = realValue59027119,
            value = getPasturelandToCroplandValue19
        };

        @alias = Set Value
        @viewer.result = yes
        setValue81 := SetTableCellValue {
            table = setValue80,
            column = 4,
            keys = realValue59027119,
            value = getPasturelandToForestValue19
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue19 := GetTableValue {
            table = calcAreas56497119,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue82 := SetTableCellValue {
            table = setValue81,
            column = 5,
            keys = realValue59027119,
            value = getForestToCroplandValue19
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue19 := SetTableCellValue {
            table = setValue82,
            column = 6,
            keys = realValue59027119,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2006 to 2007 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748320 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20062 1;

            NumberMap _20072 2;
        }};

        @viewer.areas = yes
        calcAreas56497120 := CalcAreas calculateCategoricalMap748320;

        realValue59027120 := RealValue 20067;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue20 := GetTableValue {
            table = calcAreas56497120,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue20 := GetTableValue {
            table = calcAreas56497120,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue83 := SetTableCellValue {
            table = setStateValue16,
            column = 2,
            keys = realValue59027120,
            value = getForestToPasturelandValue20
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue20 := GetTableValue {
            table = calcAreas56497120,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue84 := SetTableCellValue {
            table = setValue83,
            column = 3,
            keys = realValue59027120,
            value = getPasturelandToCroplandValue20
        };

        @alias = Set Value
        @viewer.result = yes
        setValue85 := SetTableCellValue {
            table = setValue84,
            column = 4,
            keys = realValue59027120,
            value = getPasturelandToForestValue20
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue20 := GetTableValue {
            table = calcAreas56497120,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue86 := SetTableCellValue {
            table = setValue85,
            column = 5,
            keys = realValue59027120,
            value = getForestToCroplandValue20
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue20 := SetTableCellValue {
            table = setValue86,
            column = 6,
            keys = realValue59027120,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2006 to 2007 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748321 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20060 1;

            NumberMap _20070 2;
        }};

        @viewer.areas = yes
        calcAreas56497121 := CalcAreas calculateCategoricalMap748321;

        realValue59027121 := RealValue 20067;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue21 := GetTableValue {
            table = calcAreas56497121,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue87 := SetTableCellValue {
            table = setStateValue17,
            column = 2,
            keys = realValue59027121,
            value = getForestToPasturelandValue21
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue21 := GetTableValue {
            table = calcAreas56497121,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue88 := SetTableCellValue {
            table = setValue87,
            column = 3,
            keys = realValue59027121,
            value = getPasturelandToCroplandValue21
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue21 := GetTableValue {
            table = calcAreas56497121,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue21 := GetTableValue {
            table = calcAreas56497121,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue89 := SetTableCellValue {
            table = setValue88,
            column = 4,
            keys = realValue59027121,
            value = getPasturelandToForestValue21
        };

        @alias = Set Value
        @viewer.result = yes
        setValue90 := SetTableCellValue {
            table = setValue89,
            column = 5,
            keys = realValue59027121,
            value = getForestToCroplandValue21
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue21 := SetTableCellValue {
            table = setValue90,
            column = 6,
            keys = realValue59027121,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2006 to 2007 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748322 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2006 1;

            NumberMap _2007 2;
        }};

        @viewer.areas = yes
        calcAreas56497122 := CalcAreas calculateCategoricalMap748322;

        realValue59027122 := RealValue 20067;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue22 := GetTableValue {
            table = calcAreas56497122,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue22 := GetTableValue {
            table = calcAreas56497122,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue91 := SetTableCellValue {
            table = setStateValue18,
            column = 2,
            keys = realValue59027122,
            value = getForestToPasturelandValue22
        };

        @alias = Set Value
        @viewer.result = yes
        setValue92 := SetTableCellValue {
            table = setValue91,
            column = 3,
            keys = realValue59027122,
            value = getPasturelandToCroplandValue22
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue22 := GetTableValue {
            table = calcAreas56497122,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue22 := GetTableValue {
            table = calcAreas56497122,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue93 := SetTableCellValue {
            table = setValue92,
            column = 4,
            keys = realValue59027122,
            value = getPasturelandToForestValue22
        };

        @alias = Set Value
        @viewer.result = yes
        setValue94 := SetTableCellValue {
            table = setValue93,
            column = 5,
            keys = realValue59027122,
            value = getForestToCroplandValue22
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue22 := SetTableCellValue {
            table = setValue94,
            column = 6,
            keys = realValue59027122,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2007 to 2008 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748323 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20071 1;

            NumberMap _20081 2;
        }};

        @viewer.areas = yes
        calcAreas56497123 := CalcAreas calculateCategoricalMap748323;

        realValue59027123 := RealValue 20078;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue23 := GetTableValue {
            table = calcAreas56497123,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue23 := GetTableValue {
            table = calcAreas56497123,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue95 := SetTableCellValue {
            table = setStateValue19,
            column = 2,
            keys = realValue59027123,
            value = getForestToPasturelandValue23
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue23 := GetTableValue {
            table = calcAreas56497123,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue96 := SetTableCellValue {
            table = setValue95,
            column = 3,
            keys = realValue59027123,
            value = getPasturelandToCroplandValue23
        };

        @alias = Set Value
        @viewer.result = yes
        setValue97 := SetTableCellValue {
            table = setValue96,
            column = 4,
            keys = realValue59027123,
            value = getPasturelandToForestValue23
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue23 := GetTableValue {
            table = calcAreas56497123,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue98 := SetTableCellValue {
            table = setValue97,
            column = 5,
            keys = realValue59027123,
            value = getForestToCroplandValue23
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue23 := SetTableCellValue {
            table = setValue98,
            column = 6,
            keys = realValue59027123,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2007 to 2008 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748324 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20072 1;

            NumberMap _20082 2;
        }};

        @viewer.areas = yes
        calcAreas56497124 := CalcAreas calculateCategoricalMap748324;

        realValue59027124 := RealValue 20078;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue24 := GetTableValue {
            table = calcAreas56497124,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue99 := SetTableCellValue {
            table = setStateValue20,
            column = 2,
            keys = realValue59027124,
            value = getForestToPasturelandValue24
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue24 := GetTableValue {
            table = calcAreas56497124,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue100 := SetTableCellValue {
            table = setValue99,
            column = 3,
            keys = realValue59027124,
            value = getPasturelandToCroplandValue24
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue24 := GetTableValue {
            table = calcAreas56497124,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue101 := SetTableCellValue {
            table = setValue100,
            column = 4,
            keys = realValue59027124,
            value = getPasturelandToForestValue24
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue24 := GetTableValue {
            table = calcAreas56497124,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue102 := SetTableCellValue {
            table = setValue101,
            column = 5,
            keys = realValue59027124,
            value = getForestToCroplandValue24
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue24 := SetTableCellValue {
            table = setValue102,
            column = 6,
            keys = realValue59027124,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2007 to 2008 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748325 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2007 1;

            NumberMap _2008 2;
        }};

        @viewer.areas = yes
        calcAreas56497125 := CalcAreas calculateCategoricalMap748325;

        realValue59027125 := RealValue 20078;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue25 := GetTableValue {
            table = calcAreas56497125,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue25 := GetTableValue {
            table = calcAreas56497125,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue103 := SetTableCellValue {
            table = setStateValue22,
            column = 2,
            keys = realValue59027125,
            value = getForestToPasturelandValue25
        };

        @alias = Set Value
        @viewer.result = yes
        setValue104 := SetTableCellValue {
            table = setValue103,
            column = 3,
            keys = realValue59027125,
            value = getPasturelandToCroplandValue25
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue25 := GetTableValue {
            table = calcAreas56497125,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue105 := SetTableCellValue {
            table = setValue104,
            column = 4,
            keys = realValue59027125,
            value = getPasturelandToForestValue25
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue25 := GetTableValue {
            table = calcAreas56497125,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue106 := SetTableCellValue {
            table = setValue105,
            column = 5,
            keys = realValue59027125,
            value = getForestToCroplandValue25
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue25 := SetTableCellValue {
            table = setValue106,
            column = 6,
            keys = realValue59027125,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2007 to 2008 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748326 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20070 1;

            NumberMap _20080 2;
        }};

        @viewer.areas = yes
        calcAreas56497126 := CalcAreas calculateCategoricalMap748326;

        realValue59027126 := RealValue 20078;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue26 := GetTableValue {
            table = calcAreas56497126,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue107 := SetTableCellValue {
            table = setStateValue21,
            column = 2,
            keys = realValue59027126,
            value = getForestToPasturelandValue26
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue26 := GetTableValue {
            table = calcAreas56497126,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue108 := SetTableCellValue {
            table = setValue107,
            column = 3,
            keys = realValue59027126,
            value = getPasturelandToCroplandValue26
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue26 := GetTableValue {
            table = calcAreas56497126,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue26 := GetTableValue {
            table = calcAreas56497126,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue109 := SetTableCellValue {
            table = setValue108,
            column = 4,
            keys = realValue59027126,
            value = getPasturelandToForestValue26
        };

        @alias = Set Value
        @viewer.result = yes
        setValue110 := SetTableCellValue {
            table = setValue109,
            column = 5,
            keys = realValue59027126,
            value = getForestToCroplandValue26
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue26 := SetTableCellValue {
            table = setValue110,
            column = 6,
            keys = realValue59027126,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2008 to 2009 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748327 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20081 1;

            NumberMap _20091 2;
        }};

        @viewer.areas = yes
        calcAreas56497127 := CalcAreas calculateCategoricalMap748327;

        realValue59027127 := RealValue 20089;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue27 := GetTableValue {
            table = calcAreas56497127,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue111 := SetTableCellValue {
            table = setStateValue23,
            column = 2,
            keys = realValue59027127,
            value = getForestToPasturelandValue27
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue27 := GetTableValue {
            table = calcAreas56497127,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue112 := SetTableCellValue {
            table = setValue111,
            column = 3,
            keys = realValue59027127,
            value = getPasturelandToCroplandValue27
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue27 := GetTableValue {
            table = calcAreas56497127,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue113 := SetTableCellValue {
            table = setValue112,
            column = 4,
            keys = realValue59027127,
            value = getPasturelandToForestValue27
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue27 := GetTableValue {
            table = calcAreas56497127,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue114 := SetTableCellValue {
            table = setValue113,
            column = 5,
            keys = realValue59027127,
            value = getForestToCroplandValue27
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue27 := SetTableCellValue {
            table = setValue114,
            column = 6,
            keys = realValue59027127,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2008 to 2009 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748328 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20082 1;

            NumberMap _20092 2;
        }};

        @viewer.areas = yes
        calcAreas56497128 := CalcAreas calculateCategoricalMap748328;

        realValue59027128 := RealValue 20089;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue28 := GetTableValue {
            table = calcAreas56497128,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue115 := SetTableCellValue {
            table = setStateValue24,
            column = 2,
            keys = realValue59027128,
            value = getForestToPasturelandValue28
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue28 := GetTableValue {
            table = calcAreas56497128,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue116 := SetTableCellValue {
            table = setValue115,
            column = 3,
            keys = realValue59027128,
            value = getPasturelandToCroplandValue28
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue28 := GetTableValue {
            table = calcAreas56497128,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue117 := SetTableCellValue {
            table = setValue116,
            column = 4,
            keys = realValue59027128,
            value = getPasturelandToForestValue28
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue28 := GetTableValue {
            table = calcAreas56497128,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue118 := SetTableCellValue {
            table = setValue117,
            column = 5,
            keys = realValue59027128,
            value = getForestToCroplandValue28
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue28 := SetTableCellValue {
            table = setValue118,
            column = 6,
            keys = realValue59027128,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2008 to 2009 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap748329 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2008 1;

            NumberMap _2009 2;
        }};

        @viewer.areas = yes
        calcAreas56497129 := CalcAreas calculateCategoricalMap748329;

        realValue59027129 := RealValue 20089;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue29 := GetTableValue {
            table = calcAreas56497129,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue119 := SetTableCellValue {
            table = setStateValue25,
            column = 2,
            keys = realValue59027129,
            value = getForestToPasturelandValue29
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue29 := GetTableValue {
            table = calcAreas56497129,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue29 := GetTableValue {
            table = calcAreas56497129,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue120 := SetTableCellValue {
            table = setValue119,
            column = 3,
            keys = realValue59027129,
            value = getPasturelandToCroplandValue29
        };

        @alias = Set Value
        @viewer.result = yes
        setValue121 := SetTableCellValue {
            table = setValue120,
            column = 4,
            keys = realValue59027129,
            value = getPasturelandToForestValue29
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue29 := GetTableValue {
            table = calcAreas56497129,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue122 := SetTableCellValue {
            table = setValue121,
            column = 5,
            keys = realValue59027129,
            value = getForestToCroplandValue29
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue29 := SetTableCellValue {
            table = setValue122,
            column = 6,
            keys = realValue59027129,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2008 to 2009 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483508 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20080 1;

            NumberMap _20090 2;
        }};

        @viewer.areas = yes
        calcAreas56497130 := CalcAreas calculateCategoricalMap7483508;

        realValue59027130 := RealValue 20089;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue30 := GetTableValue {
            table = calcAreas56497130,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue501 := SetTableCellValue {
            table = setStateValue26,
            column = 2,
            keys = realValue59027130,
            value = getForestToPasturelandValue30
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue30 := GetTableValue {
            table = calcAreas56497130,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue502 := SetTableCellValue {
            table = setValue501,
            column = 3,
            keys = realValue59027130,
            value = getPasturelandToCroplandValue30
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue503 := GetTableValue {
            table = calcAreas56497130,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue504 := SetTableCellValue {
            table = setValue502,
            column = 4,
            keys = realValue59027130,
            value = getPasturelandToForestValue503
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue506 := GetTableValue {
            table = calcAreas56497130,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue507 := SetTableCellValue {
            table = setValue504,
            column = 5,
            keys = realValue59027130,
            value = getForestToCroplandValue506
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue505 := SetTableCellValue {
            table = setValue507,
            column = 6,
            keys = realValue59027130,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2009 to 2010 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483520 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20091 1;

            NumberMap _20101 2;
        }};

        @viewer.areas = yes
        calcAreas564971509 := CalcAreas calculateCategoricalMap7483520;

        realValue590271510 := RealValue 200910;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue511 := GetTableValue {
            table = calcAreas564971509,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue512 := GetTableValue {
            table = calcAreas564971509,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue513 := SetTableCellValue {
            table = setStateValue27,
            column = 2,
            keys = realValue590271510,
            value = getForestToPasturelandValue511
        };

        @alias = Set Value
        @viewer.result = yes
        setValue514 := SetTableCellValue {
            table = setValue513,
            column = 3,
            keys = realValue590271510,
            value = getPasturelandToCroplandValue512
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue515 := GetTableValue {
            table = calcAreas564971509,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue516 := SetTableCellValue {
            table = setValue514,
            column = 4,
            keys = realValue590271510,
            value = getPasturelandToForestValue515
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue518 := GetTableValue {
            table = calcAreas564971509,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue519 := SetTableCellValue {
            table = setValue516,
            column = 5,
            keys = realValue590271510,
            value = getForestToCroplandValue518
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue517 := SetTableCellValue {
            table = setValue519,
            column = 6,
            keys = realValue590271510,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2009 to 2010 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483532 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20092 1;

            NumberMap _20102 2;
        }};

        @viewer.areas = yes
        calcAreas564971521 := CalcAreas calculateCategoricalMap7483532;

        realValue590271522 := RealValue 200910;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue523 := GetTableValue {
            table = calcAreas564971521,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue524 := GetTableValue {
            table = calcAreas564971521,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue525 := SetTableCellValue {
            table = setStateValue28,
            column = 2,
            keys = realValue590271522,
            value = getForestToPasturelandValue523
        };

        @alias = Set Value
        @viewer.result = yes
        setValue526 := SetTableCellValue {
            table = setValue525,
            column = 3,
            keys = realValue590271522,
            value = getPasturelandToCroplandValue524
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue527 := GetTableValue {
            table = calcAreas564971521,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue528 := SetTableCellValue {
            table = setValue526,
            column = 4,
            keys = realValue590271522,
            value = getPasturelandToForestValue527
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue530 := GetTableValue {
            table = calcAreas564971521,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue531 := SetTableCellValue {
            table = setValue528,
            column = 5,
            keys = realValue590271522,
            value = getForestToCroplandValue530
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue529 := SetTableCellValue {
            table = setValue531,
            column = 6,
            keys = realValue590271522,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2009 to 2010 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483544 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2009 1;

            NumberMap _2010 2;
        }};

        @viewer.areas = yes
        calcAreas564971533 := CalcAreas calculateCategoricalMap7483544;

        realValue590271534 := RealValue 200910;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue535 := GetTableValue {
            table = calcAreas564971533,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue536 := GetTableValue {
            table = calcAreas564971533,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue537 := SetTableCellValue {
            table = setStateValue29,
            column = 2,
            keys = realValue590271534,
            value = getForestToPasturelandValue535
        };

        @alias = Set Value
        @viewer.result = yes
        setValue538 := SetTableCellValue {
            table = setValue537,
            column = 3,
            keys = realValue590271534,
            value = getPasturelandToCroplandValue536
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue539 := GetTableValue {
            table = calcAreas564971533,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue542 := GetTableValue {
            table = calcAreas564971533,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue540 := SetTableCellValue {
            table = setValue538,
            column = 4,
            keys = realValue590271534,
            value = getPasturelandToForestValue539
        };

        @alias = Set Value
        @viewer.result = yes
        setValue543 := SetTableCellValue {
            table = setValue540,
            column = 5,
            keys = realValue590271534,
            value = getForestToCroplandValue542
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue541 := SetTableCellValue {
            table = setValue543,
            column = 6,
            keys = realValue590271534,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2009 to 2010 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483556 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20090 1;

            NumberMap _20100 2;
        }};

        @viewer.areas = yes
        calcAreas564971545 := CalcAreas calculateCategoricalMap7483556;

        realValue590271546 := RealValue 200910;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue547 := GetTableValue {
            table = calcAreas564971545,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue549 := SetTableCellValue {
            table = setStateValue505,
            column = 2,
            keys = realValue590271546,
            value = getForestToPasturelandValue547
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue548 := GetTableValue {
            table = calcAreas564971545,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue550 := SetTableCellValue {
            table = setValue549,
            column = 3,
            keys = realValue590271546,
            value = getPasturelandToCroplandValue548
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue551 := GetTableValue {
            table = calcAreas564971545,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue552 := SetTableCellValue {
            table = setValue550,
            column = 4,
            keys = realValue590271546,
            value = getPasturelandToForestValue551
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue554 := GetTableValue {
            table = calcAreas564971545,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue555 := SetTableCellValue {
            table = setValue552,
            column = 5,
            keys = realValue590271546,
            value = getForestToCroplandValue554
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue553 := SetTableCellValue {
            table = setValue555,
            column = 6,
            keys = realValue590271546,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2010 to 2011 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483568 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20101 1;

            NumberMap _20111 2;
        }};

        @viewer.areas = yes
        calcAreas564971557 := CalcAreas calculateCategoricalMap7483568;

        realValue590271558 := RealValue 201011;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue559 := GetTableValue {
            table = calcAreas564971557,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue561 := SetTableCellValue {
            table = setStateValue517,
            column = 2,
            keys = realValue590271558,
            value = getForestToPasturelandValue559
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue560 := GetTableValue {
            table = calcAreas564971557,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue563 := GetTableValue {
            table = calcAreas564971557,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue562 := SetTableCellValue {
            table = setValue561,
            column = 3,
            keys = realValue590271558,
            value = getPasturelandToCroplandValue560
        };

        @alias = Set Value
        @viewer.result = yes
        setValue564 := SetTableCellValue {
            table = setValue562,
            column = 4,
            keys = realValue590271558,
            value = getPasturelandToForestValue563
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue566 := GetTableValue {
            table = calcAreas564971557,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue567 := SetTableCellValue {
            table = setValue564,
            column = 5,
            keys = realValue590271558,
            value = getForestToCroplandValue566
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue565 := SetTableCellValue {
            table = setValue567,
            column = 6,
            keys = realValue590271558,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2010 to 2011 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483580 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20102 1;

            NumberMap _20112 2;
        }};

        @viewer.areas = yes
        calcAreas564971569 := CalcAreas calculateCategoricalMap7483580;

        realValue590271570 := RealValue 201011;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue571 := GetTableValue {
            table = calcAreas564971569,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue572 := GetTableValue {
            table = calcAreas564971569,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue573 := SetTableCellValue {
            table = setStateValue529,
            column = 2,
            keys = realValue590271570,
            value = getForestToPasturelandValue571
        };

        @alias = Set Value
        @viewer.result = yes
        setValue574 := SetTableCellValue {
            table = setValue573,
            column = 3,
            keys = realValue590271570,
            value = getPasturelandToCroplandValue572
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue575 := GetTableValue {
            table = calcAreas564971569,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue578 := GetTableValue {
            table = calcAreas564971569,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue576 := SetTableCellValue {
            table = setValue574,
            column = 4,
            keys = realValue590271570,
            value = getPasturelandToForestValue575
        };

        @alias = Set Value
        @viewer.result = yes
        setValue579 := SetTableCellValue {
            table = setValue576,
            column = 5,
            keys = realValue590271570,
            value = getForestToCroplandValue578
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue577 := SetTableCellValue {
            table = setValue579,
            column = 6,
            keys = realValue590271570,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2010 to 2011 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483592 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20100 1;

            NumberMap _20110 2;
        }};

        @viewer.areas = yes
        calcAreas564971581 := CalcAreas calculateCategoricalMap7483592;

        realValue590271582 := RealValue 201011;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue583 := GetTableValue {
            table = calcAreas564971581,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue584 := GetTableValue {
            table = calcAreas564971581,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue585 := SetTableCellValue {
            table = setStateValue553,
            column = 2,
            keys = realValue590271582,
            value = getForestToPasturelandValue583
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue587 := GetTableValue {
            table = calcAreas564971581,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue586 := SetTableCellValue {
            table = setValue585,
            column = 3,
            keys = realValue590271582,
            value = getPasturelandToCroplandValue584
        };

        @alias = Set Value
        @viewer.result = yes
        setValue588 := SetTableCellValue {
            table = setValue586,
            column = 4,
            keys = realValue590271582,
            value = getPasturelandToForestValue587
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue590 := GetTableValue {
            table = calcAreas564971581,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue591 := SetTableCellValue {
            table = setValue588,
            column = 5,
            keys = realValue590271582,
            value = getForestToCroplandValue590
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue589 := SetTableCellValue {
            table = setValue591,
            column = 6,
            keys = realValue590271582,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2010 to 2011 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483604 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2010 1;

            NumberMap _2011 2;
        }};

        @viewer.areas = yes
        calcAreas564971593 := CalcAreas calculateCategoricalMap7483604;

        realValue590271594 := RealValue 201011;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue595 := GetTableValue {
            table = calcAreas564971593,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue596 := GetTableValue {
            table = calcAreas564971593,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue597 := SetTableCellValue {
            table = setStateValue541,
            column = 2,
            keys = realValue590271594,
            value = getForestToPasturelandValue595
        };

        @alias = Set Value
        @viewer.result = yes
        setValue598 := SetTableCellValue {
            table = setValue597,
            column = 3,
            keys = realValue590271594,
            value = getPasturelandToCroplandValue596
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue599 := GetTableValue {
            table = calcAreas564971593,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue600 := SetTableCellValue {
            table = setValue598,
            column = 4,
            keys = realValue590271594,
            value = getPasturelandToForestValue599
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue602 := GetTableValue {
            table = calcAreas564971593,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue603 := SetTableCellValue {
            table = setValue600,
            column = 5,
            keys = realValue590271594,
            value = getForestToCroplandValue602
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue601 := SetTableCellValue {
            table = setValue603,
            column = 6,
            keys = realValue590271594,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2011 to 2012 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483616 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20111 1;

            NumberMap _20121 2;
        }};

        @viewer.areas = yes
        calcAreas564971605 := CalcAreas calculateCategoricalMap7483616;

        realValue590271606 := RealValue 201112;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue607 := GetTableValue {
            table = calcAreas564971605,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue609 := SetTableCellValue {
            table = setStateValue565,
            column = 2,
            keys = realValue590271606,
            value = getForestToPasturelandValue607
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue608 := GetTableValue {
            table = calcAreas564971605,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue611 := GetTableValue {
            table = calcAreas564971605,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue610 := SetTableCellValue {
            table = setValue609,
            column = 3,
            keys = realValue590271606,
            value = getPasturelandToCroplandValue608
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue614 := GetTableValue {
            table = calcAreas564971605,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue612 := SetTableCellValue {
            table = setValue610,
            column = 4,
            keys = realValue590271606,
            value = getPasturelandToForestValue611
        };

        @alias = Set Value
        @viewer.result = yes
        setValue615 := SetTableCellValue {
            table = setValue612,
            column = 5,
            keys = realValue590271606,
            value = getForestToCroplandValue614
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue613 := SetTableCellValue {
            table = setValue615,
            column = 6,
            keys = realValue590271606,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2011 to 2012 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483628 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20112 1;

            NumberMap _20122 2;
        }};

        @viewer.areas = yes
        calcAreas564971617 := CalcAreas calculateCategoricalMap7483628;

        realValue590271618 := RealValue 201112;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue619 := GetTableValue {
            table = calcAreas564971617,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue621 := SetTableCellValue {
            table = setStateValue577,
            column = 2,
            keys = realValue590271618,
            value = getForestToPasturelandValue619
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue620 := GetTableValue {
            table = calcAreas564971617,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue623 := GetTableValue {
            table = calcAreas564971617,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue622 := SetTableCellValue {
            table = setValue621,
            column = 3,
            keys = realValue590271618,
            value = getPasturelandToCroplandValue620
        };

        @alias = Set Value
        @viewer.result = yes
        setValue624 := SetTableCellValue {
            table = setValue622,
            column = 4,
            keys = realValue590271618,
            value = getPasturelandToForestValue623
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue626 := GetTableValue {
            table = calcAreas564971617,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue627 := SetTableCellValue {
            table = setValue624,
            column = 5,
            keys = realValue590271618,
            value = getForestToCroplandValue626
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue625 := SetTableCellValue {
            table = setValue627,
            column = 6,
            keys = realValue590271618,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2011 to 2012 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483640 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20110 1;

            NumberMap _20120 2;
        }};

        @viewer.areas = yes
        calcAreas564971629 := CalcAreas calculateCategoricalMap7483640;

        realValue590271630 := RealValue 201112;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue631 := GetTableValue {
            table = calcAreas564971629,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue632 := GetTableValue {
            table = calcAreas564971629,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue633 := SetTableCellValue {
            table = setStateValue589,
            column = 2,
            keys = realValue590271630,
            value = getForestToPasturelandValue631
        };

        @alias = Set Value
        @viewer.result = yes
        setValue634 := SetTableCellValue {
            table = setValue633,
            column = 3,
            keys = realValue590271630,
            value = getPasturelandToCroplandValue632
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue635 := GetTableValue {
            table = calcAreas564971629,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue636 := SetTableCellValue {
            table = setValue634,
            column = 4,
            keys = realValue590271630,
            value = getPasturelandToForestValue635
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue638 := GetTableValue {
            table = calcAreas564971629,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue639 := SetTableCellValue {
            table = setValue636,
            column = 5,
            keys = realValue590271630,
            value = getForestToCroplandValue638
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue637 := SetTableCellValue {
            table = setValue639,
            column = 6,
            keys = realValue590271630,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2011 to 2012 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483652 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2011 1;

            NumberMap _2012 2;
        }};

        @viewer.areas = yes
        calcAreas564971641 := CalcAreas calculateCategoricalMap7483652;

        realValue590271642 := RealValue 201112;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue643 := GetTableValue {
            table = calcAreas564971641,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue644 := GetTableValue {
            table = calcAreas564971641,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue645 := SetTableCellValue {
            table = setStateValue601,
            column = 2,
            keys = realValue590271642,
            value = getForestToPasturelandValue643
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue647 := GetTableValue {
            table = calcAreas564971641,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue646 := SetTableCellValue {
            table = setValue645,
            column = 3,
            keys = realValue590271642,
            value = getPasturelandToCroplandValue644
        };

        @alias = Set Value
        @viewer.result = yes
        setValue648 := SetTableCellValue {
            table = setValue646,
            column = 4,
            keys = realValue590271642,
            value = getPasturelandToForestValue647
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue650 := GetTableValue {
            table = calcAreas564971641,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue651 := SetTableCellValue {
            table = setValue648,
            column = 5,
            keys = realValue590271642,
            value = getForestToCroplandValue650
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue649 := SetTableCellValue {
            table = setValue651,
            column = 6,
            keys = realValue590271642,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2012 to 2013 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483664 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20121 1;

            NumberMap _20131 2;
        }};

        @viewer.areas = yes
        calcAreas564971653 := CalcAreas calculateCategoricalMap7483664;

        realValue590271654 := RealValue 201213;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue655 := GetTableValue {
            table = calcAreas564971653,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue656 := GetTableValue {
            table = calcAreas564971653,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue657 := SetTableCellValue {
            table = setStateValue613,
            column = 2,
            keys = realValue590271654,
            value = getForestToPasturelandValue655
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue659 := GetTableValue {
            table = calcAreas564971653,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue658 := SetTableCellValue {
            table = setValue657,
            column = 3,
            keys = realValue590271654,
            value = getPasturelandToCroplandValue656
        };

        @alias = Set Value
        @viewer.result = yes
        setValue660 := SetTableCellValue {
            table = setValue658,
            column = 4,
            keys = realValue590271654,
            value = getPasturelandToForestValue659
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue662 := GetTableValue {
            table = calcAreas564971653,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue663 := SetTableCellValue {
            table = setValue660,
            column = 5,
            keys = realValue590271654,
            value = getForestToCroplandValue662
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue661 := SetTableCellValue {
            table = setValue663,
            column = 6,
            keys = realValue590271654,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2012 to 2013 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483676 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20122 1;

            NumberMap _20132 2;
        }};

        @viewer.areas = yes
        calcAreas564971665 := CalcAreas calculateCategoricalMap7483676;

        realValue590271666 := RealValue 201213;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue667 := GetTableValue {
            table = calcAreas564971665,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue669 := SetTableCellValue {
            table = setStateValue625,
            column = 2,
            keys = realValue590271666,
            value = getForestToPasturelandValue667
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue668 := GetTableValue {
            table = calcAreas564971665,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue671 := GetTableValue {
            table = calcAreas564971665,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue670 := SetTableCellValue {
            table = setValue669,
            column = 3,
            keys = realValue590271666,
            value = getPasturelandToCroplandValue668
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue674 := GetTableValue {
            table = calcAreas564971665,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue672 := SetTableCellValue {
            table = setValue670,
            column = 4,
            keys = realValue590271666,
            value = getPasturelandToForestValue671
        };

        @alias = Set Value
        @viewer.result = yes
        setValue675 := SetTableCellValue {
            table = setValue672,
            column = 5,
            keys = realValue590271666,
            value = getForestToCroplandValue674
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue673 := SetTableCellValue {
            table = setValue675,
            column = 6,
            keys = realValue590271666,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2012 to 2013 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483688 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20120 1;

            NumberMap _20130 2;
        }};

        @viewer.areas = yes
        calcAreas564971677 := CalcAreas calculateCategoricalMap7483688;

        realValue590271678 := RealValue 201213;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue679 := GetTableValue {
            table = calcAreas564971677,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue680 := GetTableValue {
            table = calcAreas564971677,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue681 := SetTableCellValue {
            table = setStateValue637,
            column = 2,
            keys = realValue590271678,
            value = getForestToPasturelandValue679
        };

        @alias = Set Value
        @viewer.result = yes
        setValue682 := SetTableCellValue {
            table = setValue681,
            column = 3,
            keys = realValue590271678,
            value = getPasturelandToCroplandValue680
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue683 := GetTableValue {
            table = calcAreas564971677,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue684 := SetTableCellValue {
            table = setValue682,
            column = 4,
            keys = realValue590271678,
            value = getPasturelandToForestValue683
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue686 := GetTableValue {
            table = calcAreas564971677,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue687 := SetTableCellValue {
            table = setValue684,
            column = 5,
            keys = realValue590271678,
            value = getForestToCroplandValue686
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue685 := SetTableCellValue {
            table = setValue687,
            column = 6,
            keys = realValue590271678,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2012 to 2013 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483700 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2012 1;

            NumberMap _2013 2;
        }};

        @viewer.areas = yes
        calcAreas564971689 := CalcAreas calculateCategoricalMap7483700;

        realValue590271690 := RealValue 201213;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue691 := GetTableValue {
            table = calcAreas564971689,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue692 := GetTableValue {
            table = calcAreas564971689,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue693 := SetTableCellValue {
            table = setStateValue649,
            column = 2,
            keys = realValue590271690,
            value = getForestToPasturelandValue691
        };

        @alias = Set Value
        @viewer.result = yes
        setValue694 := SetTableCellValue {
            table = setValue693,
            column = 3,
            keys = realValue590271690,
            value = getPasturelandToCroplandValue692
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue695 := GetTableValue {
            table = calcAreas564971689,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue696 := SetTableCellValue {
            table = setValue694,
            column = 4,
            keys = realValue590271690,
            value = getPasturelandToForestValue695
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue698 := GetTableValue {
            table = calcAreas564971689,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue699 := SetTableCellValue {
            table = setValue696,
            column = 5,
            keys = realValue590271690,
            value = getForestToCroplandValue698
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue697 := SetTableCellValue {
            table = setValue699,
            column = 6,
            keys = realValue590271690,
            value = string78831
        };
    }};

    @collapsed = yes
    @alias = 2013 to 2014 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483712 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20132 1;

            NumberMap _20142 2;
        }};

        @viewer.areas = yes
        calcAreas564971701 := CalcAreas calculateCategoricalMap7483712;

        realValue590271702 := RealValue 201314;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue703 := GetTableValue {
            table = calcAreas564971701,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue705 := SetTableCellValue {
            table = setStateValue673,
            column = 2,
            keys = realValue590271702,
            value = getForestToPasturelandValue703
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue704 := GetTableValue {
            table = calcAreas564971701,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue706 := SetTableCellValue {
            table = setValue705,
            column = 3,
            keys = realValue590271702,
            value = getPasturelandToCroplandValue704
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue707 := GetTableValue {
            table = calcAreas564971701,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue708 := SetTableCellValue {
            table = setValue706,
            column = 4,
            keys = realValue590271702,
            value = getPasturelandToForestValue707
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue710 := GetTableValue {
            table = calcAreas564971701,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue711 := SetTableCellValue {
            table = setValue708,
            column = 5,
            keys = realValue590271702,
            value = getForestToCroplandValue710
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue709 := SetTableCellValue {
            table = setValue711,
            column = 6,
            keys = realValue590271702,
            value = string78830
        };
    }};

    @collapsed = yes
    @alias = 2013 to 2014 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483724 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20131 1;

            NumberMap _20141 2;
        }};

        @viewer.areas = yes
        calcAreas564971713 := CalcAreas calculateCategoricalMap7483724;

        realValue590271714 := RealValue 201314;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue715 := GetTableValue {
            table = calcAreas564971713,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue717 := SetTableCellValue {
            table = setStateValue661,
            column = 2,
            keys = realValue590271714,
            value = getForestToPasturelandValue715
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue716 := GetTableValue {
            table = calcAreas564971713,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue718 := SetTableCellValue {
            table = setValue717,
            column = 3,
            keys = realValue590271714,
            value = getPasturelandToCroplandValue716
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue719 := GetTableValue {
            table = calcAreas564971713,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue722 := GetTableValue {
            table = calcAreas564971713,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue720 := SetTableCellValue {
            table = setValue718,
            column = 4,
            keys = realValue590271714,
            value = getPasturelandToForestValue719
        };

        @alias = Set Value
        @viewer.result = yes
        setValue723 := SetTableCellValue {
            table = setValue720,
            column = 5,
            keys = realValue590271714,
            value = getForestToCroplandValue722
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue721 := SetTableCellValue {
            table = setValue723,
            column = 6,
            keys = realValue590271714,
            value = string7883
        };
    }};

    @collapsed = yes
    @alias = 2013 to 2014 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483736 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _20130 1;

            NumberMap _20140 2;
        }};

        @viewer.areas = yes
        calcAreas564971725 := CalcAreas calculateCategoricalMap7483736;

        realValue590271726 := RealValue 201314;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue727 := GetTableValue {
            table = calcAreas564971725,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue728 := GetTableValue {
            table = calcAreas564971725,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue729 := SetTableCellValue {
            table = setStateValue685,
            column = 2,
            keys = realValue590271726,
            value = getForestToPasturelandValue727
        };

        @alias = Set Value
        @viewer.result = yes
        setValue730 := SetTableCellValue {
            table = setValue729,
            column = 3,
            keys = realValue590271726,
            value = getPasturelandToCroplandValue728
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue731 := GetTableValue {
            table = calcAreas564971725,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue734 := GetTableValue {
            table = calcAreas564971725,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue732 := SetTableCellValue {
            table = setValue730,
            column = 4,
            keys = realValue590271726,
            value = getPasturelandToForestValue731
        };

        @alias = Set Value
        @viewer.result = yes
        setValue735 := SetTableCellValue {
            table = setValue732,
            column = 5,
            keys = realValue590271726,
            value = getForestToCroplandValue734
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue733 := SetTableCellValue {
            table = setValue735,
            column = 6,
            keys = realValue590271726,
            value = string78832
        };
    }};

    @collapsed = yes
    @alias = 2013 to 2014 Values
    Group {{
        @viewer.result = yes
        calculateCategoricalMap7483748 := CalculateCategoricalMap {
            expression = [
                if i1 = 4 and i2 = 5 then
                    45
                else if i1 = 5 and i2 = 2 then
                    52
                else if i1 = 5 and i2 = 4 then
                    54
                else if i1 = 4 and i2 = 2 then
                    42
                else 
                    null                                
            ],
            cellType = .uint8,
            nullValue = .default,
            resultIsSparse = .no,
            resultFormat = .none
        } {{
            NumberMap _2013 1;

            NumberMap _2014 2;
        }};

        @viewer.areas = yes
        calcAreas564971737 := CalcAreas calculateCategoricalMap7483748;

        realValue590271738 := RealValue 201314;

        @alias = Get Forest to Pastureland Value
        @viewer.result = yes
        getForestToPasturelandValue739 := GetTableValue {
            table = calcAreas564971737,
            keys = [ 45 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Get Pastureland to Cropland Value
        @viewer.result = yes
        getPasturelandToCroplandValue740 := GetTableValue {
            table = calcAreas564971737,
            keys = [ 52 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue741 := SetTableCellValue {
            table = setStateValue697,
            column = 2,
            keys = realValue590271738,
            value = getForestToPasturelandValue739
        };

        @alias = Set Value
        @viewer.result = yes
        setValue742 := SetTableCellValue {
            table = setValue741,
            column = 3,
            keys = realValue590271738,
            value = getPasturelandToCroplandValue740
        };

        @alias = Get Pastureland to Forest Value
        @viewer.result = yes
        getPasturelandToForestValue743 := GetTableValue {
            table = calcAreas564971737,
            keys = [ 54 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue744 := SetTableCellValue {
            table = setValue742,
            column = 4,
            keys = realValue590271738,
            value = getPasturelandToForestValue743
        };

        @alias = Get Forest to Cropland Value
        @viewer.result = yes
        getForestToCroplandValue746 := GetTableValue {
            table = calcAreas564971737,
            keys = [ 42 ],
            column = 3,
            valueIfNotFound = .none
        };

        @alias = Set Value
        @viewer.result = yes
        setValue747 := SetTableCellValue {
            table = setValue744,
            column = 5,
            keys = realValue590271738,
            value = getForestToCroplandValue746
        };

        @alias = Set State Value
        @viewer.result = yes
        setStateValue745 := SetTableCellValue {
            table = setValue747,
            column = 6,
            keys = realValue590271738,
            value = string78831
        };
    }};

    @collapsed = no
    Workdir folder9317 {{
        workdir749 = workdir;

        SaveTable {
            table = setStateValue745,
            filename = "matoGrossoTransitions.csv",
            suffixDigits = 2,
            step = .none,
            workdir = workdir749
        };

        SaveTable {
            table = setStateValue721,
            filename = "rhondoniaTransitions.csv",
            suffixDigits = 2,
            step = .none,
            workdir = workdir749
        };

        SaveTable {
            table = setStateValue709,
            filename = "chacoTransitions.csv",
            suffixDigits = 2,
            step = .none,
            workdir = workdir749
        };

        SaveTable {
            table = setStateValue733,
            filename = "paraTransitions.csv",
            suffixDigits = 2,
            step = .none,
            workdir = workdir749
        };
    }};
}};